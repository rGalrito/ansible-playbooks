- name: 
  hosts: dns
  vars:
    dns:
      admin_url: http://192.168.178.30/admin/
  #any_errors_fatal: true
  any_errors_fatal: false
  serial: 1
  become: false
  tasks:

  ## PiHole 
  - name: PiHole admin page check
    uri:
      url: "{{ dns.admin_url }}"
      status_code: 200
      follow_redirects: none
    register: dns_check

  - debug:
      msg: dns_check|from_json
    #when: '"200" in dns_check'

  - name: Get pihole service status
    shell: "pihole status"
    register: pihole_check

  - debug: 
      name: "PIHOLE CHECK"
      var: pihole_check
    when: '"NOT" in dns_check'

  - name: PiHole restart
    shell: "pihole restartdns"
    when: '"NOT" in pihole_check.stdout'


  ## VPN 
  - name: ping VPN server
    shell: "ping 10.8.0.1 -c 3"
    register: ping_result 
    changed_when: ping_result.rc == 1
    ignore_errors: yes
#    check_mode: no

  - debug:
      var: ping_result
    when: ping_result.rc == 1

  - name: OpenVPN restart
    become: yes
    service: 
      name: openvpn
      state: restarted
    when: ping_result.rc == 1
    #changed_when: ping_result.rc == 0
    register: openvpn_restarted
    
  - debug:
      var: ping_result.rc
#      var: openvpn_restarted
#    when: 
#      - openvpn_restarted is not None
#      - openvpn_restarted.skipped 
#      - openvpn_restarted.skipped == "false"

  - name: Google nslookup check
    shell: 
      cmd: nslookup google.com 1.1.1.1
    register: result

  - debug:
      var: result
    when: result.rc != 0


#  - name: "Debug"
#    debug:
#      var: ping_result
#      var: ping_result, openvpn_restarted, result #shell: which bash

 
